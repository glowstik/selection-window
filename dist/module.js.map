{"mappings":"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","sources":["src/SelectionWindow.js","src/SelectionWindow.module.css"],"sourcesContent":["import React from \"react\"\nimport useSize from \"@react-hook/size\"\nimport {useDrag} from '@use-gesture/react'\nimport styles from './SelectionWindow.module.css'\n\nexport function SelectionWindow({\n  children,\n  onCropChange,\n  className = undefined,\n  width = undefined,\n  height = undefined,\n  mouseThreshold = 20,\n  touchThreshold = 45 \n}) {\n  const [node, setNode] = React.useState(null)\n  const selectionRef = React.useRef(null)\n  const stateRef = React.useRef({ \n    crop: null,\n    dragging: false,\n    pointers: new Map(),\n    edges: []\n  })\n  const [containerWidth, containerHeight] = useSize(node)\n\n  React.useEffect(\n    () => {\n      if (!crop && containerWidth && containerHeight) {\n        handleCropChange({\n          left: containerWidth * 0.25,\n          top: containerHeight * 0.25,\n          right: containerWidth * 0.75,\n          bottom: containerHeight * 0.75,\n        })\n      }\n    },\n    [containerWidth, containerHeight]\n  )\n\n  const touchMoveEvent = useEvent(handleTouchMove)\n  const dragStartEvent = useEvent(handleDragStart)\n  const dragEvent = useEvent(handleDrag)\n  const dragEndEvent = useEvent(handleDragEnd)\n\n  const dragGesture = useDrag((touch) => {\n    if(!stateRef.current.edges[0] && touch._pointerId > 1 || touch._pointerId < 0) {\n      moveSelection({ dx: touch.delta[0], dy: touch.delta[1] })\n    }\n  })\n\n  React.useEffect(\n    () => {\n      if (!node) return\n      node.addEventListener('touchmove', touchMoveEvent)\n      node.addEventListener('pointerdown', dragStartEvent)\n      \n      return () => {\n        node.removeEventListener('touchmove', touchMoveEvent)\n        node.removeEventListener('pointerdown', dragStartEvent)\n      }\n    },\n    [node]\n  )\n\n  const crop = stateRef.current.crop\n\n  return (\n    <div ref={setNode} className={cx(className, styles.component)} style={{ width: px(width), height: px(height) }}>\n      <div\n        {...dragGesture()}\n        ref={selectionRef}\n        className={styles.selection}\n        style={{\n          position: \"absolute\",\n          left: px(crop?.left ?? 0),\n          top: px(crop?.top ?? 0),\n          width: px((crop?.right ?? 0) - (crop?.left ?? 0)),\n          height: px((crop?.bottom ?? 0) - (crop?.top ?? 0)),\n          touchAction: 'none'\n        }}\n        {...{ children }}\n      />\n    </div>\n  )\n\n  function handleCropChange(crop) {\n    stateRef.current.crop = updateSizes(crop)\n    onCropChange(stateRef.current.crop)\n    Object.assign(\n      selectionRef.current.style,\n      {\n        left: px(crop?.left ?? 0),\n        top: px(crop?.top ?? 0),\n        width: px((crop?.right ?? 0) - (crop?.left ?? 0)),\n        height: px((crop?.bottom ?? 0) - (crop?.top ?? 0)),\n      }\n    )\n  }\n\n  function handleDragStart(e) {\n    e.preventDefault()\n    \n    const { x, y } = getXY(e)\n    const threshold = e.pointerType === 'mouse' ? mouseThreshold : touchThreshold\n    const pointerState = getPointerState({ x, y, threshold })\n    \n    stateRef.current.dragging = true\n    stateRef.current.pointers.set(e.pointerId, pointerState)\n    stateRef.current.edges = stateRef.current.edges.concat(pointerState.edges)\n\n    window.addEventListener('pointermove', dragEvent, { passive: true })\n    window.addEventListener('pointerup', dragEndEvent)\n    window.addEventListener('pointercancel', dragEndEvent)\n  }\n\n  function handleTouchMove(e) {\n    if (!stateRef.current.dragging) return\n    e.preventDefault()\n  }\n\n  function handleDrag(e) {\n    if (!stateRef.current.dragging) return\n    \n    const pointerState = stateRef.current.pointers.get(e.pointerId)\n    const { x, y } = getXY(e)\n    const threshold = e.pointerType === 'mouse' ? mouseThreshold : touchThreshold\n\n    if (pointerState.edges.length) {\n      transformSelection({ pointerState, x: x - pointerState.dx, y: y - pointerState.dy, threshold })\n      return\n    } else if (!stateRef.current.edges.length && stateRef.current.pointers.size === 2) {\n      const isFirstPointer = [...stateRef.current.pointers.values()][0] === pointerState\n      if(isFirstPointer) moveSelection({ dx: e.movementX, dy: e.movementY })\n      scaleSelection({ pointerState, dx: e.movementX, dy: e.movementY, threshold })\n    } else if (e.pointerId === 1) {\n      moveSelection({ dx: e.movementX, dy: e.movementY })\n    }\n  }\n\n  function handleDragEnd(e) {\n    if (!stateRef.current.pointers.has(e.pointerId)) return // Drag already ended, multiple events can end dragging\n\n    const { edges } = stateRef.current.pointers.get(e.pointerId)\n    stateRef.current.edges = stateRef.current.edges.filter(x => !edges.includes(x))\n    stateRef.current.pointers.delete(e.pointerId)\n    stateRef.current.dragging = Boolean(stateRef.current.pointers.size)\n\n    if (!stateRef.current.dragging) {\n      window.removeEventListener('pointermove', dragEvent, { passive: true })\n      window.removeEventListener('pointerup', dragEndEvent)\n      window.removeEventListener('pointercancel', dragEndEvent)\n    }\n  }\n\n  function getXY(e) {\n    const { clientX, clientY } = e\n    const rect = node.getBoundingClientRect()\n    return {\n      x: clientX - rect.left,\n      y: clientY - rect.top\n    }\n  }\n\n  function getPointerState({ x, y, threshold }) {\n    const crop = stateRef.current.crop\n    const edges = []\n    const dl = x - crop.left\n    const dr = x - crop.right\n    const dt = y - crop.top\n    const db = y - crop.bottom\n\n    const adl = Math.abs(dl)\n    const adr = Math.abs(dr)\n    const adt = Math.abs(dt)\n    const adb = Math.abs(db)\n\n    if (adl <= adr && adl < threshold) edges.push(\"left\")\n    else if (adr <= adl && adr < threshold) edges.push(\"right\")\n    if (adt <= adb && adt < threshold) edges.push(\"top\")\n    else if (adb <= adt && adb < threshold) edges.push(\"bottom\")\n\n    return { \n      x,\n      y,\n      dx: edges.includes('left') ? dl : edges.includes('right') ? dr : 0, \n      dy: edges.includes('top') ? dt : edges.includes('bottom') ? db : 0, \n      edges: edges.filter(x => !stateRef.current.edges.includes(x))\n    }\n  }\n\n  function transformSelection({ pointerState, x, y, threshold }) {\n    const crop = stateRef.current.crop\n    const newCrop = { ...crop }\n\n    if (pointerState.edges.includes(\"left\")) {\n      newCrop.left = Math.max(0, x)\n      newCrop.right = Math.min(containerWidth, Math.max(crop.right, x + threshold));\n    } else if (pointerState.edges.includes(\"right\")) {\n      newCrop.right = Math.min(containerWidth, x);\n      newCrop.left = Math.max(0, Math.min(crop.left, x - threshold));\n    }\n\n    if (pointerState.edges.includes(\"top\")) {\n      newCrop.top = Math.max(0, y)\n      newCrop.bottom = Math.min(containerHeight, Math.max(newCrop.bottom, y + threshold))\n    } else if (pointerState.edges.includes(\"bottom\")) {\n      newCrop.bottom = Math.min(containerHeight, y)\n      newCrop.top = Math.max(0, Math.min(crop.top, y - threshold))\n    }\n\n    handleCropChange(newCrop)\n  }\n\n  function moveSelection({ dx, dy }) {\n    const crop = stateRef.current.crop\n    const newCrop = { ...crop }\n\n    // We cannot constrain edges without considering the other edges: the left \n    // edge may be well within the container while your move the right side \n    // out. We constrain the selection by making sure the delta x and y never\n    // exceed the delta that would move any of the edges out of the container.\n    const clampedDx = clamp(-crop.left, containerWidth - crop.right, dx)\n    const clampedDy = clamp(-crop.top, containerHeight - crop.bottom, dy)\n\n    // If an edge is being 'held', it won't be moved\n    newCrop.left = stateRef.current.edges.includes('left') ? crop.left : crop.left + clampedDx\n    newCrop.right = stateRef.current.edges.includes('right') ? crop.right : crop.right + clampedDx\n    newCrop.top = stateRef.current.edges.includes('top') ? crop.top : crop.top + clampedDy\n    newCrop.bottom = stateRef.current.edges.includes('bottom') ? crop.bottom : crop.bottom + clampedDy\n\n    handleCropChange(newCrop)\n  }\n\n  function scaleSelection({ pointerState, dx, dy, threshold }) {\n    const crop = stateRef.current.crop\n    const newCrop = { ...crop }\n    \n    // New scale is calculated in reference to the distance to the other pointer on the screen\n    const [otherPointer] = [...stateRef.current.pointers.values()].filter(x => x !== pointerState)\n\n    const distanceBefore = Math.sqrt((pointerState.x - otherPointer.x) ** 2 + (pointerState.y - otherPointer.y) ** 2)\n    const distanceAfter = Math.sqrt((pointerState.x + dx - otherPointer.x) ** 2 + (pointerState.y + dy - otherPointer.y) ** 2)\n    \n    // Change in scale\n    const deltaScale = clamp(\n      // Cannot be so small the window would become large than the threshold, rendering some corners inaccessible\n      Math.max(threshold / containerWidth, threshold / containerHeight),\n      // Cannot be so large the window would become larger than it's container\n      Math.min(containerWidth / crop.width, containerHeight / crop.height),\n      // The new scale\n      distanceAfter / distanceBefore\n    ) - 1\n\n    // Since we know for sure the resulting crop cannot exceed the container \n    // size, we can simply an edge of the new crop rect without considering the\n    // other edges\n    newCrop.left = clamp(0, containerWidth - threshold, crop.left - crop.width * deltaScale * 0.5)\n    newCrop.right = clamp(threshold, containerWidth, crop.right + crop.width * deltaScale * 0.5)\n    newCrop.top = clamp(0, containerHeight - threshold, crop.top - crop.height * deltaScale * 0.5)\n    newCrop.bottom = clamp(threshold, containerHeight, crop.bottom + crop.height * deltaScale * 0.5)\n\n    handleCropChange(newCrop)\n  }\n\n  function updateSizes({ left, right, top, bottom }) {\n    return {\n      left,\n      right,\n      top, \n      bottom,\n      width: Math.min(right - left, containerWidth),\n      height: Math.min(bottom - top, containerHeight),\n      container: {\n        width: containerWidth,\n        height: containerHeight\n      }\n    }\n  }\n}\n\nfunction px(n) {\n  return (typeof n === 'number' || typeof n === 'string')\n    ? n + \"px\"\n    : n\n}\n\nfunction clamp(left, right, value) {\n  const [min, max] = left < right ? [left, right] : [right, left]\n  return Math.max(min, Math.min(max, value))\n}\n\nfunction lerp(a, b, n) {\n  return (b - a) + a * n\n}\n\nfunction unlerp(a, b, n) {\n  return (n - a) / (b - a)\n}\n\nfunction cx(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nfunction useEvent(fn) {\n  const fnRef = React.useRef(null)\n  fnRef.current = fn\n\n  return React.useCallback((...args) => fnRef.current(...args), [])\n}\n",".component {\n  position: relative;\n  overflow: hidden;\n}\n\n.selection > * {\n  width: 100%;\n  height: 100%;\n}\n"],"names":[],"version":3,"file":"module.js.map"}